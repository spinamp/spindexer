{
  "name": "spindexer",
  "version": "0.0.1",
  "description": "",
  "main": "src/index.ts",
  "engines": {
    "node": "16.17"
  },
  "scripts": {
    "lint": "npx eslint . --fix",
    "start": "NODE_EXTRA_CA_CERTS=./db-ssl-certificate.pem ts-node src/index.ts",
    "start-logs": "NODE_EXTRA_CA_CERTS=./db-ssl-certificate.pem ts-node src/index.ts 2>&1 | tee /tmp/debug",
    "cli": "NODE_EXTRA_CA_CERTS=./db-ssl-certificate.pem ts-node src/cli/cli.ts",
    "build": "tsc --skipLibCheck",
    "test": "source .env && NODE_ENV=test mocha",
    "test-watch": "source .env && NODE_ENV=test mocha --watch",
    "test-reset-db": "source .env && PGPASSWORD=$POSTGRES_PASSWORD psql -d postgres -h $POSTGRES_HOST -p 5432 -U $POSTGRES_USERNAME -c \"drop database spindexer_test;\"",
    "bootstrap-db": "NODE_EXTRA_CA_CERTS=./db-ssl-certificate.pem ts-node db/bootstrap.ts",
    "serve": "source .env && DEBUG=graphile-build-pg NODE_EXTRA_CA_CERTS=./db-ssl-certificate.pem npx ts-node ./src/serve.ts --cors",
    "serve-seeds-api": "source .env && NODE_EXTRA_CA_CERTS=./db-ssl-certificate.pem npx ts-node ./src/serve_seeds_api.ts",
    "connect-db-root": "source .env && PGPASSWORD=$POSTGRES_PASSWORD psql -d postgres -h $POSTGRES_HOST -p 5432 -U $POSTGRES_USERNAME",
    "connect-db": "source .env && PGPASSWORD=$POSTGRES_PASSWORD psql -d $POSTGRES_DATABASE -h $POSTGRES_HOST -p 5432 -U $POSTGRES_USERNAME",
    "save-db": "rm -rf db/dump/ && source .env && PGPASSWORD=$POSTGRES_PASSWORD pg_dump -F d -f ./db/dump -b -C -d $POSTGRES_DATABASE -h $POSTGRES_HOST -p 5432 -U $POSTGRES_USERNAME",
    "save-seeds": "rm db/seeds.dump || true && source .env && PGPASSWORD=$POSTGRES_PASSWORD pg_dump -Fp --data-only --disable-triggers -O -f ./db/seeds.dump -b -t '\"public\".\"raw_seeds\"' -d $POSTGRES_DATABASE -h $POSTGRES_HOST -p 5432 -U $POSTGRES_USERNAME",
    "drop-db": "read -p \"u sure? ctrl-c to abort \" -n 1 -r; source .env && PGPASSWORD=$POSTGRES_PASSWORD psql -d postgres -h $POSTGRES_HOST -p 5432 -U $POSTGRES_USERNAME -c \"drop database $POSTGRES_DATABASE;\"",
    "create-db": "source .env && ts-node scripts/create_db.ts",
    "migrate-latest": "source .env && ts-node scripts/migrate_db.ts",
    "clear-track-tables": "read -p \"u sure? ctrl-c to abort \" -n 1 -r; NODE_EXTRA_CA_CERTS=./db-ssl-certificate.pem ts-node scripts/clear_track_tables.ts",
    "clear-seeds": "NODE_EXTRA_CA_CERTS=./db-ssl-certificate.pem ts-node scripts/clear_seeds.ts",
    "restore-full-db": "source .env && PGPASSWORD=$POSTGRES_PASSWORD pg_restore ./db/dump  -h $POSTGRES_HOST -p 5432 -U $POSTGRES_USERNAME --create --clean --if-exists --verbose --verbose -F d -d postgres",
    "reset-db": "yarn drop-db && yarn restore-full-db",
    "reset-db-minimal": "yarn drop-db && yarn create-db && yarn migrate-latest && yarn restore-db-table raw_ipfs_pins && yarn restore-db-table raw_ipfs_files",
    "restore-db-table": "source .env && PGPASSWORD=$POSTGRES_PASSWORD pg_restore ./db/dump  -h $POSTGRES_HOST -p 5432 -U $POSTGRES_USERNAME --verbose --verbose -F d -d $POSTGRES_DATABASE --data-only -t",
    "restore-seeds": "source .env && PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -p 5432 -U $POSTGRES_USERNAME -d $POSTGRES_DATABASE -f db/seeds.dump",
    "knex": "source .env && npx knex --knexfile ./db/../src/db/knexfile.ts --connection postgresql://$POSTGRES_USERNAME:$POSTGRES_PASSWORD@$POSTGRES_HOST:5432/$POSTGRES_DATABASE",
    "migrate-down": "source .env && yarn knex migrate:down"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/core": "^7.17.9",
    "@types/bn.js": "^5.1.0",
    "@types/express": "^4.17.14",
    "@types/lodash": "^4.14.181",
    "@types/mocha": "^10.0.0",
    "@types/node": "^17.0.35",
    "@types/node-fetch": "^2.6.2",
    "@types/prompt": "^1.1.2",
    "@types/supertest": "^2.0.12",
    "@types/yargs": "^17.0.10",
    "@typescript-eslint/eslint-plugin": "^5.25.0",
    "@typescript-eslint/parser": "^5.25.0",
    "babel-plugin-module-resolver": "^4.1.0",
    "eslint": "^8.16.0",
    "eslint-import-resolver-babel-module": "^5.3.1",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-unused-imports": "^2.0.0",
    "mocha": "^10.0.0",
    "nodemon": "^2.0.15",
    "supertest": "^6.2.4",
    "ts-node": "^10.7.0",
    "typechain": "^8.0.0",
    "typescript": "^4.6.4"
  },
  "dependencies": {
    "@ethersproject/providers": "^5.6.2",
    "@graphile-contrib/pg-order-by-related": "^1.0.0-beta.6",
    "@metaplex-foundation/js": "^0.15.0",
    "@project-serum/anchor": "^0.25.0",
    "@types/cors": "^2.8.12",
    "@vscode/sqlite3": "^5.0.8",
    "axios": "^0.26.1",
    "bs58": "^5.0.0",
    "cors": "^2.8.5",
    "dotenv": "^16.0.0",
    "ethcall": "^4.4.0",
    "ethereumjs-util": "^7.1.5",
    "ethers": "^5.6.2",
    "express": "^4.18.1",
    "graphql": "^16.3.0",
    "graphql-request": "^4.2.0",
    "ipfs-http-client": "50.1.2",
    "knex": "^1.0.7",
    "knex-dump": "^1.0.11",
    "lodash": "^4.17.21",
    "pg": "^8.7.3",
    "postgraphile": "^4.12.9",
    "postgraphile-plugin-connection-filter": "^2.3.0",
    "prompt": "^1.2.2",
    "slugify": "^1.6.5",
    "sqlite3": "^5.0.3",
    "web3": "^1.8.0",
    "yargs": "^17.4.0"
  }
}
